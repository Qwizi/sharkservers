"""Init models

Revision ID: 3700a8acf4b0
Revises: 
Create Date: 2024-02-05 14:27:39.962445

"""
from alembic import op
import sqlalchemy as sa
import ormar


# revision identifiers, used by Alembic.
revision = '3700a8acf4b0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('forum_categories',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('threads_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('forum_threads_meta',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('tag', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('color', sa.String(length=256), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('scopes',
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('app_name', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=False),
    sa.Column('protected', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('steamrep_profiles',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('profile_url', sa.String(length=255), nullable=False),
    sa.Column('is_scammer', sa.Boolean(), nullable=True),
    sa.Column('steamid64', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_url'),
    sa.UniqueConstraint('steamid64')
    )
    op.create_table('user_sessions',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('user_ip', sa.String(length=255), nullable=False),
    sa.Column('user_agent', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('steamrep_profile', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('steamid3', sa.String(length=255), nullable=False),
    sa.Column('steamid32', sa.String(length=255), nullable=False),
    sa.Column('steamid64', sa.String(length=255), nullable=False),
    sa.Column('profile_url', sa.String(length=255), nullable=True),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('country_code', sa.String(length=15), nullable=False),
    sa.Column('reputation', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['steamrep_profile'], ['steamrep_profiles.id'], name='fk_players_steamrep_profiles_id_steamrep_profile'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_url'),
    sa.UniqueConstraint('steamid3'),
    sa.UniqueConstraint('steamid32'),
    sa.UniqueConstraint('steamid64')
    )
    op.create_table('roles_scopes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scope', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('role', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['roles.id'], name='fk_roles_scopes_roles_role_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scope'], ['scopes.id'], name='fk_roles_scopes_scopes_scope_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('servers',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('tag', sa.String(length=64), nullable=False),
    sa.Column('ip', sa.String(length=64), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('admin_role', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('api_url', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['admin_role'], ['roles.id'], name='fk_servers_roles_id_admin_role'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tag')
    )
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_activated', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('display_role', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_online', sa.DateTime(), nullable=True),
    sa.Column('secret_salt', sa.String(length=255), nullable=False),
    sa.Column('threads_count', sa.Integer(), nullable=True),
    sa.Column('posts_count', sa.Integer(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('player', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['display_role'], ['roles.id'], name='fk_users_roles_id_display_role'),
    sa.ForeignKeyConstraint(['player'], ['players.id'], name='fk_users_players_id_player'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('secret_salt'),
    sa.UniqueConstraint('username')
    )
    op.create_table('banned',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('user', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=False),
    sa.Column('ban_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('banned_by', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['banned_by'], ['users.id'], name='fk_banned_users_id_banned_by'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_banned_users_id_user'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chats',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('author', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['author'], ['users.id'], name='fk_chats_users_id_author'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forum_posts',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('author', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['users.id'], name='fk_forum_posts_users_id_author'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forum_reputation',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('author', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['users.id'], name='fk_forum_reputation_users_id_author'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forum_threads',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('category', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('author', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('post_count', sa.Integer(), nullable=True),
    sa.Column('server', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['users.id'], name='fk_forum_threads_users_id_author'),
    sa.ForeignKeyConstraint(['category'], ['forum_categories.id'], name='fk_forum_threads_forum_categories_id_category'),
    sa.ForeignKeyConstraint(['server'], ['servers.id'], name='fk_forum_threads_servers_id_server'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('user', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['roles.id'], name='fk_users_roles_roles_role_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_users_roles_users_user_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_usersessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usersession', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('user', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_users_usersessions_users_user_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['usersession'], ['user_sessions.id'], name='fk_users_usersessions_user_sessions_usersession_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('like', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('post', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['like'], ['forum_reputation.id'], name='fk_posts_likes_forum_reputation_like_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post'], ['forum_posts.id'], name='fk_posts_likes_forum_posts_post_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('threads_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('thread', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['post'], ['forum_posts.id'], name='fk_threads_posts_forum_posts_post_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['thread'], ['forum_threads.id'], name='fk_threads_posts_forum_threads_thread_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('threads_threadmetas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('threadmeta', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.Column('thread', ormar.fields.sqlalchemy_uuid.CHAR(32), nullable=True),
    sa.ForeignKeyConstraint(['thread'], ['forum_threads.id'], name='fk_threads_threadmetas_forum_threads_thread_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['threadmeta'], ['forum_threads_meta.id'], name='fk_threads_threadmetas_forum_threads_meta_threadmeta_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('threads_threadmetas')
    op.drop_table('threads_posts')
    op.drop_table('posts_likes')
    op.drop_table('users_usersessions')
    op.drop_table('users_roles')
    op.drop_table('forum_threads')
    op.drop_table('forum_reputation')
    op.drop_table('forum_posts')
    op.drop_table('chats')
    op.drop_table('banned')
    op.drop_table('users')
    op.drop_table('servers')
    op.drop_table('roles_scopes')
    op.drop_table('players')
    op.drop_table('user_sessions')
    op.drop_table('steamrep_profiles')
    op.drop_table('scopes')
    op.drop_table('roles')
    op.drop_table('forum_threads_meta')
    op.drop_table('forum_categories')
    # ### end Alembic commands ###
