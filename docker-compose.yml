services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sharkservers_backend
    command: uvicorn sharkservers.main:app --reload --host 0.0.0.0 --port 8080 --ws  wsproto --proxy-headers
    ports:
      - "8080:8080"
    volumes:
      - ./backend/:/app/
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    restart: always
    networks:
      - shark
  db:
    image: postgres:15.1
    container_name: sharkservers_db
    environment:
      - POSTGRES_DB=shark_db
      - POSTGRES_USER=shark_user
      - POSTGRES_PASSWORD=shark_password
    restart: always
    ports:
      - "5432:5432"
    networks:
      - shark
    healthcheck:
      test: "exit 0"
  redis:
    image: "redis:alpine"
    container_name: sharkservers_redis
    restart: always
    expose:
      - "6379:6379"
    networks:
      - shark
    healthcheck:
      test: "exit 1"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    container_name: sharkservers_frontend
    volumes:
      - ./frontend/:/app
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    user: "root:root"
    depends_on:
      - backend
    networks:
      - shark

networks:
  shark:
    name: shark
    external: true